# -*- coding: utf-8 -*-
from odoo import models, api
import logging

_logger = logging.getLogger(__name__)

class MailThreadTrackingOverride(models.AbstractModel):
    """
    Override the core method that posts messages for tracked fields.
    This is the definitive way to prevent emails from being sent when a tracked field
    (like 'status' on stock.order) is changed. We force the message to be an
    internal note with notifications disabled.
    """
    _inherit = 'mail.thread'

    def _message_track_post_template(self, changes):
        """
        This is an override of a private method. It's a strong measure but necessary
        to solve the persistent email issue in Odoo 18 for this simulation environment.

        The goal is to force any message generated by a tracked field change
        to be a simple, internal-only log note, without sending any emails.
        """
        # Force the template to be 'mail.mt_note', which is a plain internal log message.
        # This prevents the system from trying to find more complex templates that might
        # involve email layouts.
        # The 'mail.mt_note' subtype does not have an email template associated with it.
        return self.env.ref('mail.mt_note', raise_if_not_found=False)
